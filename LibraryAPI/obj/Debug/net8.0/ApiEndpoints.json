[
  {
    "ContainingType": "LibraryAPI.Controllers.AuthorController",
    "Method": "Author",
    "RelativePath": "Author/api/AuthorEntry",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "LibraryManagement.Model.Entities.AuthorRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "LibraryAPI.Controllers.AuthorController",
    "Method": "GetAuthor",
    "RelativePath": "Author/api/Authorlist",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "LibraryAPI.Controllers.AuthorController",
    "Method": "FilterBook",
    "RelativePath": "Author/api/Get_authorItem",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "LibraryAPI.Controllers.BookController",
    "Method": "BookEntry",
    "RelativePath": "Books/api/BookEntry",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "LibraryManagement.Model.Entities.BookRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "LibraryAPI.Controllers.BookController",
    "Method": "GetBook",
    "RelativePath": "Books/api/Booklist",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "LibraryAPI.Controllers.BookController",
    "Method": "FilterBook",
    "RelativePath": "Books/api/GetBookItem",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "LibraryAPI.Controllers.CategoryController",
    "Method": "GetBook",
    "RelativePath": "Category/api/_categorylist",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "LibraryAPI.Controllers.CategoryController",
    "Method": "CategoryEntry",
    "RelativePath": "Category/api/Category",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "LibraryManagement.Model.Entities.CategoryRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "LibraryAPI.Controllers.CategoryController",
    "Method": "FilterBook",
    "RelativePath": "Category/api/Get_categoryItem",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ExamAPI.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[ExamAPI.WeatherForecast, LibraryAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]